@model ShoppingCart

<form method="post">
    <input asp-for="@Model.ProductId" hidden />
    <div class="product-details-container">
        <div class="product-header">
            <div class="container">
                <div class="row align-items-center">
                    <div class="col-md-4 text-md-end">
                        <a asp-action="Index" class="btn-back">
                            <i class="bi bi-arrow-left"></i> Back to Home
                        </a>
                    </div>

                    <div class="col-md-8">
                        <h1 class="product-title">@Model.Product.Title</h1>
                        <p class="product-author">by <span>@Model.Product.Author</span></p>
                    </div>
                    
                </div>
            </div>
        </div>

        <div class="container">
            <div class="product-content">
                <div class="row g-4">
                    <div class="col-lg-5">
                        <div class="product-image-container">
                            @if (!string.IsNullOrEmpty(Model.Product.ImageUrl))
                            {
                                <img src="@Model.Product.ImageUrl" alt="@Model.Product.Title" class="product-image" />
                            }
                            else
                            {
                                <img src="https://placehold.co/500x600" alt="@Model.Product.Title" class="product-image" />
                            }
                            <div class="image-overlay"></div>
                            <span class="category-badge">@Model.Product.Category.Name</span>

                            @if (Model.Product.ListPrice > Model.Product.Price)
                            {
                                <div class="discount-badge">
                                    <span>@(Math.Round((1 - Model.Product.Price / Model.Product.ListPrice) * 100))%</span>
                                    <span>OFF</span>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="col-lg-7">
                        <div class="product-info">
                            <div class="product-meta">
                                <div class="isbn">
                                    <span>ISBN:</span> @Model.Product.ISBN
                                </div>

                                <div class="original-price">
                                    <span>List Price:</span>
                                    <span class="strike-through">@Model.Product.ListPrice.ToString("c")</span>
                                </div>
                            </div>

                            <div class="product-description">
                                <h3>Description</h3>
                                <p>@Model.Product.Description</p>
                            </div>

                            <div class="pricing-table">
                                <div class="pricing-header">
                                    <div class="pricing-cell header">Quantity</div>
                                    <div class="pricing-cell">1-50</div>
                                    <div class="pricing-cell">51-100</div>
                                    <div class="pricing-cell">100+</div>
                                </div>
                                <div class="pricing-row">
                                    <div class="pricing-cell header">Price</div>
                                    <div class="pricing-cell price">@Model.Product.Price.ToString("c")</div>
                                    <div class="pricing-cell price">@Model.Product.Price50.ToString("c")</div>
                                    <div class="pricing-cell price">@Model.Product.Price100.ToString("c")</div>
                                </div>
                            </div>

                            <div class="purchase-options">
                                <div class="quantity-selector">
                                    <label for="quantity">Quantity</label>
                                    <div class="quantity-input">
                                        <button type="button" class="quantity-btn minus" onclick="decrementQuantity()">-</button>
                                        <input asp-for="@Model.Count" id="quantity" type="number" value="1" min="1" class="quantity-value" />
                                        <button type="button" class="quantity-btn plus" onclick="incrementQuantity()">+</button>
                                    </div>
                                </div>

                                <div class="action-buttons">
                                    <button asp-action="Details" type="submit" class="btn-add-to-cart">
                                        <i class="bi bi-cart-plus"></i> Add to Cart
                                    </button>
                                    <button type="button" class="btn-wishlist">
                                        <i class="bi bi-heart"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

<style>
    /* Import Bootstrap Icons */
    
    /* Main Container */
    .product-details-container {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin-bottom: 50px;
    }

    /* Product Header */
    .product-header {
        background: linear-gradient(135deg, #3a1c71, #d76d77, #ffaf7b);
        color: white;
        padding: 30px 0;
        margin-bottom: 40px;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    }

    .product-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 5px;
        text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        animation: fadeInDown 0.5s ease;
    }

    .product-author {
        font-size: 1.2rem;
        opacity: 0.9;
        margin-bottom: 0;
        animation: fadeInUp 0.5s ease;
    }

        .product-author span {
            font-weight: 600;
        }

    .btn-back {
        display: inline-flex;
        align-items: center;
        background-color: rgba(255, 255, 255, 0.2);
        color: white;
        padding: 10px 20px;
        border-radius: 30px;
        text-decoration: none;
        font-weight: 500;
        transition: all 0.3s ease;
        backdrop-filter: blur(5px);
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

        .btn-back:hover {
            background-color: rgba(255, 255, 255, 0.3);
            transform: translateY(-2px);
            color: white;
        }

        .btn-back i {
            margin-right: 8px;
        }

    /* Product Content */
    .product-content {
        background-color: white;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        animation: fadeIn 0.6s ease;
    }

    /* Product Image */
    .product-image-container {
        position: relative;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
        margin-bottom: 20px;
    }

        .product-image-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }

    .product-image {
        width: 100%;
        height: auto;
        object-fit: cover;
        transition: all 0.5s ease;
        transform-origin: center;
    }

    .product-image-container:hover .product-image {
        transform: scale(1.05);
    }

    .image-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(to bottom, rgba(0,0,0,0) 70%, rgba(0,0,0,0.7) 100%);
        opacity: 0.7;
        transition: opacity 0.3s ease;
    }

    .category-badge {
        position: absolute;
        bottom: 20px;
        left: 20px;
        background-color: rgba(255, 255, 255, 0.9);
        color: #333;
        padding: 8px 15px;
        border-radius: 30px;
        font-weight: 600;
        font-size: 0.9rem;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        backdrop-filter: blur(5px);
    }

    .discount-badge {
        position: absolute;
        top: 20px;
        right: 20px;
        background: linear-gradient(135deg, #ff6b6b, #ff4757);
        color: white;
        border-radius: 50%;
        width: 60px;
        height: 60px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        font-weight: 700;
        font-size: 0.9rem;
        line-height: 1;
        box-shadow: 0 4px 15px rgba(255, 71, 87, 0.4);
        animation: pulse 2s infinite;
    }

        .discount-badge span:first-child {
            font-size: 1.2rem;
        }

    /* Product Info */
    .product-info {
        padding: 20px;
    }

    .product-meta {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        margin-bottom: 25px;
        font-size: 0.95rem;
    }

    .isbn, .original-price {
        color: #666;
    }

        .isbn span, .original-price span {
            font-weight: 600;
            color: #333;
        }

    .strike-through {
        text-decoration: line-through;
        position: relative;
    }

        .strike-through:after {
            content: '';
            position: absolute;
            left: 0;
            top: 50%;
            width: 100%;
            height: 2px;
            background-color: #ff6b6b;
            transform: rotate(-8deg);
        }

    /* Product Description */
    .product-description {
        margin-bottom: 30px;
    }

        .product-description h3 {
            font-size: 1.3rem;
            font-weight: 600;
            margin-bottom: 15px;
            color: #333;
            position: relative;
            padding-bottom: 10px;
        }

            .product-description h3:after {
                content: '';
                position: absolute;
                bottom: 0;
                left: 0;
                width: 50px;
                height: 3px;
                background: linear-gradient(to right, #3a1c71, #d76d77);
            }

        .product-description p {
            color: #555;
            line-height: 1.7;
        }

    /* Pricing Table */
    .pricing-table {
        margin-bottom: 30px;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
        animation: fadeInUp 0.7s ease;
    }

    .pricing-header, .pricing-row {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
    }

    .pricing-header {
        background: linear-gradient(to right, #f8f9fa, #e9ecef);
    }

    .pricing-cell {
        padding: 15px;
        text-align: center;
        border: 1px solid #eee;
    }

        .pricing-cell.header {
            font-weight: 600;
            color: #333;
            background-color: #f8f9fa;
        }

        .pricing-cell.price {
            font-weight: 700;
            color: #ff6b6b;
            font-size: 1.1rem;
        }

    /* Purchase Options */
    .purchase-options {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        align-items: flex-end;
    }

    /* Quantity Selector */
    .quantity-selector {
        flex: 0 0 200px;
    }

        .quantity-selector label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #333;
        }

    .quantity-input {
        display: flex;
        border: 2px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
    }

    .quantity-btn {
        width: 40px;
        background-color: #f8f9fa;
        border: none;
        color: #333;
        font-size: 1.2rem;
        cursor: pointer;
        transition: all 0.2s ease;
    }

        .quantity-btn:hover {
            background-color: #e9ecef;
        }

    .quantity-value {
        flex: 1;
        border: none;
        text-align: center;
        font-weight: 600;
        padding: 10px;
        width: 60px;
    }

        .quantity-value:focus {
            outline: none;
        }

    /* Action Buttons */
    .action-buttons {
        display: flex;
        gap: 15px;
        flex: 1;
    }

    .btn-add-to-cart {
        flex: 1;
        background: linear-gradient(135deg, #3a1c71, #d76d77);
        color: white;
        border: none;
        padding: 15px 25px;
        border-radius: 8px;
        font-weight: 600;
        font-size: 1.1rem;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 5px 15px rgba(215, 109, 119, 0.3);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
    }

        .btn-add-to-cart:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(215, 109, 119, 0.4);
        }

        .btn-add-to-cart i {
            font-size: 1.2rem;
        }

    .btn-wishlist {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background: white;
        border: 2px solid #eee;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 1.3rem;
        color: #777;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .btn-wishlist:hover {
            background: #ff6b6b;
            color: white;
            border-color: #ff6b6b;
            transform: scale(1.1);
            box-shadow: 0 5px 15px rgba(255, 107, 107, 0.3);
        }
    
</style>

<script>
    function incrementQuantity() {
        const input = document.getElementById('quantity');
        input.value = parseInt(input.value) + 1;
    }

    function decrementQuantity() {
        const input = document.getElementById('quantity');
        if (parseInt(input.value) > 1) {
            input.value = parseInt(input.value) - 1;
        }
    }
</script>